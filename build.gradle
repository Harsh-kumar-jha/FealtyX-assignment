import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.FealtyX-assignment '
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	implementation 'io.github.cdimascio:dotenv-java:3.2.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mockito:mockito-core:5.18.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'com.squareup.retrofit2:retrofit:2.9.0'
	implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'  // Optional but recommended for debugging
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

jar {
	enabled = false
}

bootJar {
    enabled = true
    archiveFileName = "${project.name}-${project.version}.jar"
}

tasks.register('bootRunDev', BootRun) {
	group = 'application'
	description = 'Run the application with dev profile'
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'com.FealtyX-assignment.Student.StudentApplication'
	systemProperty 'spring.profiles.active', 'dev'
}

tasks.register('bootRunStage', BootRun) {
	group = 'application'
	description = 'Run the application with stage profile'
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'com.FealtyX-assignment.Student.StudentApplication'
	systemProperty 'spring.profiles.active', 'stage'
}

tasks.register('bootRunProd', BootRun) {
	group = 'application'
	description = 'Run the application with prod profile'
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'com.FealtyX-assignment.Student.StudentApplication'
	systemProperty 'spring.profiles.active', 'prod'
}

